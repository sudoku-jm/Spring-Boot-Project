<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aloha.mapper.MemberMapper">

   <resultMap type="Member" id="memberMap">
      <id property="userNo" column="user_no" />
      <result property="userNo" column="user_no" />
      <result property="userId" column="user_id" />
      <result property="userPw" column="user_pw" />
      <result property="userName" column="user_name" />
      <result property="enabled" column="enabled" />
      <result property="regDate" column="reg_date" />
      <result property="updDate" column="upd_date" />
      <collection property="authList" resultMap="authMap">
      </collection>
   </resultMap>

   <resultMap type="MemberAuth" id="authMap">
      <result property="userNo" column="user_no" />
      <result property="auth" column="auth" />
   </resultMap>
   
   <insert id="create">
      INSERT INTO member
         (
            user_id,
            user_pw,
            user_name
         )
      VALUES
         (
            #{userId},
            #{userPw},
            #{userName}
         )
   </insert>
   
   <insert id="createAuth">
      INSERT INTO member_auth
          (
            user_no,
            auth
          )
      VALUES
          (
            #{userNo},
            #{auth}
          )
   </insert>
   
   <!-- 회원 부가정보 등록 -->
   <insert id="createMemberInfo">
   		INSERT INTO member_info( user_no, nickname, email, url )
   				VALUES ( #{userNo} , #{nickname} , #{email} , #{url} )
   </insert>
   
   <select id="readByUserId" resultMap="memberMap">
   	SELECT mem.user_no,
	   		mem.user_id,
	   		user_pw,
	   		user_name,
	   		enabled,
	   		reg_date,
	   		upd_date,
	   		auth
   	FROM  member mem LEFT OUTER JOIN member_auth auth ON mem.user_no = auth.user_no
   	WHERE mem.user_id = #{userId}
   </select>
   
   <select id="list" resultType="Member">
   	SELECT user_no,
   		user_id,
   		user_pw,
   		user_name,
   		reg_date
   	FROM member
   	ORDER BY reg_date DESC
   </select>
   
   <!-- 회원정보 불러오기 -->
   <!-- resultMap : DB필드값과 객체의 변수명이 다를때 사용한다. -->
   <select id="read" resultMap="memberMap">
   		SELECT  mem.user_no,
   				mem.user_id,
   				user_pw,
   				user_name,
   				reg_date,
   				upd_date,
   				auth
   		FROM member mem LEFT OUTER JOIN member_auth auth 
   						ON mem.user_no = auth.user_no
   		WHERE mem.user_id = #{userId}
   </select>
   
   
   <!-- 비밀번호 확인 -->
   <select id="checkPassword" resultType="member">
   		SELECT *
   		FROM member
   		WHERE user_id = #{userId}
   </select>
   
   <!-- 비밀번호 변경 -->
   <update id="changePassword">
   		UPDATE member
   		SET user_pw = #{userPw}
   		WHERE user_id = #{userId}
   </update>
   
   <!-- 대표 프로필 체크 -->
   <select id="checkProfile" resultType="int">
   		SELECT COUNT(*)
   		FROM member_img
   		WHERE user_no = #{userNo}
   			AND category = 'thumbnail'
   </select>
   
    <!-- 대표 프로필 변경 -->
    <update id="updateProfile">
    	UPDATE member_img
    	SET category = 'img'
    		WHERE user_no = #{userNo}
    		AND category = 'thumbnail'
    </update>
    
     <!-- 대표 프로필 추가 -->
     <insert id="insertProfile">
     	INSERT INTO member_img ( user_no, category, full_name, file_name )
     		VALUES( #{userNo}, #{category}, #{fullName}, #{fileName} )
     </insert>
   
   
   <!-- 회원 기본정보 변경 -->
   <update id="changeProfile">
   		UPDATE member
   		SET user_name = #{userName}
   		WHERE user_id = #{userId}
   </update>
   
   
   <!-- 회원 추가정보 변경 -->
   <update id="changeInfo">
   		UPDATE member_info
   		SET nickname = #{nickname}
   			,email = #{email}
   			,url = #{url}
   		WHERE user_no = #{userNo}
   </update>
   
   <!-- 회원 부가정보 조회  -->
   <select id="readMemberInfo" resultType="MemberInfo">
   		SELECT *
   		FROM member_info
   		WHERE user_no = #{userNo}
   </select>
   
   
   <!-- 대표 프로필 조회 -->
   <select id="readProfileImg" resultType="MemberImg">
   		SELECT *
   		FROM member_img
   		WHERE user_no = #{userNo}
   			AND category = 'thumbnail'
   </select>
   
   
   <!-- user_no로 회원정보 조회 -->
   <select id="readByUserNo" resultType="Member">
   		SELECT *
   		FROM member
   		WHERE user_no = #{userNo} 
   </select>
   
   
   <!-- linkType이 존재하는지 조회 -->
   <select id="checkLinkType" resultType="int">
   	SELECT COUNT(*)
   	FROM member_link
   	WHERE user_no = #{userNo}
   		AND link_type = #{linkType}
   </select>
   
   
   <!-- snsUrl 수정 -->
   <update id="updateSnsUrl">
   		UPDATE member_link
   			SET link = #{link}
   		WHERE user_no = #{userNo}
   			AND link_type = #{linkType}
   </update>
   
   
   <!-- snsUrl 추가 -->
   	<insert id="insertSnsUrl">
   		INSERT INTO member_link (user_no, link_type, link)
   			VALUES( #{userNo}, #{linkType}, #{link} )
   	</insert>
   	
   	<!-- snsUrl 조회 -->
   <select id="readSnsUrl" resultType="MemberLink">
   		SELECT *
   		FROM member_link
   		WHERE user_no = #{userNo}
   </select>
   
   <!-- 프로필 전체 조회 -->
   <select id="profileList" resultType="MemberImg">
   	SELECT *
   	FROM member_img
   	WHERE user_no = #{userNo}
   	ORDER BY category DESC
   </select>
   
</mapper>










